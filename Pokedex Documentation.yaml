openapi: 3.0.1
info:
  title: Pokedex API
  description: API based on the first Pokemon generation
  contact:
    name: Omar and Gabriel
    url: https://github.com/Omardf00/pokedex-2.0
    email: omardominguezfuentes@gmail.com
  license:
    name: Apache 2.0
    url: http://foo.bar
  version: "2.0"
servers:
  - url: http:localhost:8080//api/v2/pokedex/pokemon
    description: Localhost server
security:
  - JWT based Secirity: []
tags:
  - name: Pokemon Services
    description: A list of the services related with the pokemons
  - name: Files Services
    description: A list of the services related with the management of files in the
      server
  - name: Pokemon Evolution Services
    description: A list of the services related with the evolution levels
  - name: Pokemon Deatils Services
    description: A list of the services related with the details of the pokemons
  - name: WikiDex
    description: https://www.wikidex.net/wiki/Pok%C3%A9dex
    externalDocs:
      description: |-
        WikiDex is the largest Pok√©mon encyclopedia in Spanish, with 27,179 articles, covering all the official information on video games, anime, manga, and Collectible Card Game.
        This content comes from wikidex.net, and must be given attribution to its authors, as specified in the license.
        Its use is prohibited to PlagioDex (the FANDOOM wiki), for repeatedly copying without giving attribution
  - name: User Services
    description: A list of the services related with the user's CRUD
  - name: Pokemon Evolution From Services
    description: A list of the services related with the origins of the pokemons
paths:
  /api/v2/pokedex/user/:
    get:
      tags:
        - User Services
      description: Returns a list of all the users
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
        - User Services
      description: Updates the information of an specific user
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
        - User Services
      description: Creates a new user
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v2/pokedex/pokemon/evolutionFrom:
    get:
      tags:
        - Pokemon Evolution From Services
      description: Returns a list of the evolutions of the pokemons
      operationId: getEvolutionFroms
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
        - Pokemon Evolution From Services
      description: Creates a new entry in the relation table
      operationId: setEvolutionFrom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvolutionFrom'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v2/pokedex/file/:
    get:
      tags:
        - Files Services
      description: Returns a list of the files in the server
      operationId: listFiles
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
        - Files Services
      description: Uploads a file to the server
      operationId: uploadFile
      requestBody:
        content:
          application/json:
            schema:
              required:
                - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v2/pokedex/user/{id}:
    get:
      tags:
        - User Services
      description: Returns a user by id
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
        - User Services
      description: Deletes a user from the database
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v2/pokedex/pokemon/{name}:
    get:
      tags:
        - Pokemon Services
      description: Returns a pokemon by name
      operationId: getPokemon
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v2/pokedex/pokemon/pokemonByType:
    get:
      tags:
        - Pokemon Services
      description: Returns a list of the the pokemons by type
      operationId: getPokemonsByType
      parameters:
        - name: type
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Type'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v2/pokedex/pokemon/pokemonById/{id}:
    get:
      tags:
        - Pokemon Services
      description: Returns a pokemon by id
      operationId: getPokemonById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v2/pokedex/pokemon/origin:
    get:
      tags:
        - Pokemon Evolution From Services
      description: Returns the origin of a pokemon
      operationId: getOriginByEvolution
      parameters:
        - name: pokemon
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pokemon'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v2/pokedex/pokemon/evolution:
    get:
      tags:
        - Pokemon Evolution From Services
      description: Returns a list of the evolutions of the pokemon
      operationId: getEvolutionsByOrigin
      parameters:
        - name: pokemon
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pokemon'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v2/pokedex/pokemon/evolutionLevel:
    get:
      tags:
        - Pokemon Evolution Services
      description: Returns the evolution level of a pokemon
      operationId: getEvolutionLevelByPokemon
      parameters:
        - name: pokemon
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pokemon'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v2/pokedex/pokemon/details:
    get:
      tags:
        - Pokemon Deatils Services
      description: Returns a list of all the pokemons with their details
      operationId: getAllPokemonDetails
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v2/pokedex/pokemon/detailsByPokemon:
    get:
      tags:
        - Pokemon Deatils Services
      description: Returns the details of a pokemon
      operationId: getPokemonDetails
      parameters:
        - name: pokemon
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pokemon'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v2/pokedex/pokemon/allEvolutionLevels:
    get:
      tags:
        - Pokemon Evolution Services
      description: Returns a list of the evolution levels of the pokemons
      operationId: getAllEvolutionLevels
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v2/pokedex/pokemon/:
    get:
      tags:
        - Pokemon Services
      description: Returns a list of all the pokemons
      operationId: getPokemons
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    Role:
      required:
        - role
      type: object
      properties:
        roleId:
          type: integer
          format: int32
        role:
          type: string
    User:
      required:
        - email
        - name
        - password
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          $ref: '#/components/schemas/Role'
    EvolutionForm:
      required:
        - name
      type: object
      properties:
        idEvolutionForm:
          type: integer
          format: int32
        name:
          type: string
    EvolutionFrom:
      type: object
      properties:
        idEvolution:
          type: integer
          format: int32
        originPokemon:
          $ref: '#/components/schemas/Pokemon'
        evolutionedPokemon:
          $ref: '#/components/schemas/Pokemon'
        evolutionForm:
          $ref: '#/components/schemas/EvolutionForm'
    Pokemon:
      required:
        - name
      type: object
      properties:
        numPokedex:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: array
          items:
            $ref: '#/components/schemas/Type'
    Type:
      required:
        - type
      type: object
      properties:
        idType:
          type: integer
          format: int32
        type:
          type: string
